{
  "openapi": "3.0.2",
  "info": {
    "title": "Basalam OpenAPI Gateway",
    "version": "1.0.0",
    "description": "Filtered OpenAPI endpoints from core service"
  },
  "paths": {
    "/v1/invoices/payable": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Get Payable Invoices",
        "operationId": "get_payable_invoices_v2_invoice_payable_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Page",
              "type": "integer"
            },
            "name": "page",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "title": "Per Page",
              "type": "integer"
            },
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/baskets/products/{product_id}/status": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Get Product Variation Status",
        "operationId": "get_product_variation_status_v2_basket_product__product_id__status_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Product Id",
              "type": "integer"
            },
            "name": "product_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/invoices/unpaid": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Get Payable Invoices",
        "operationId": "get_payable_invoices_v2_invoice_unpaid_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Invoice Id",
              "type": "integer"
            },
            "name": "invoice_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/UnpaidInvoiceStatusEnum"
            },
            "name": "status",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Per Page",
              "type": "integer",
              "default": 20
            },
            "name": "per_page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Order"
                }
              ],
              "default": "DESC"
            },
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/invoices/{invoice_id}/payments": {
      "post": {
        "tags": [
          "Order"
        ],
        "summary": "Create Payment",
        "operationId": "create_payment_v2_invoice__invoice_id__payment_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Invoice Id",
              "type": "integer"
            },
            "name": "invoice_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentRequestModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/payments/{payment_id}/callbacks": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Payment Callback",
        "operationId": "payment_callback_v2_payment__pay_id__callback_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Pay Id",
              "type": "integer"
            },
            "name": "payment_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Callback",
              "type": "string"
            },
            "name": "callback",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Order"
        ],
        "summary": "Payment Callback",
        "operationId": "payment_callback_v2_payment__pay_id__callback_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Pay Id",
              "type": "integer"
            },
            "name": "payment_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Callback",
              "type": "string"
            },
            "name": "callback",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/baskets": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Get Active Basket",
        "operationId": "get_active_basket_v2_basket_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Refresh",
              "type": "boolean",
              "default": false
            },
            "name": "refresh",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Order": {
        "title": "Order",
        "enum": [
          "ASC",
          "DESC"
        ],
        "description": "An enumeration."
      },
      "UnpaidInvoiceStatusEnum": {
        "title": "UnpaidInvoiceStatusEnum",
        "enum": [
          "saleable",
          "payable",
          "unpaid"
        ],
        "description": "An enumeration."
      },
      "PaymentDriver": {
        "title": "PaymentDriver",
        "required": [
          "amount"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "title": "Amount",
            "type": "integer",
            "gte": 0
          }
        }
      },
      "CreatePaymentRequestModel": {
        "title": "CreatePaymentRequestModel",
        "required": [
          "pay_drivers",
          "callback"
        ],
        "type": "object",
        "properties": {
          "pay_drivers": {
            "title": "Pay Drivers",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/PaymentDriver"
            }
          },
          "callback": {
            "title": "Callback",
            "type": "string"
          },
          "option_code": {
            "title": "Option Code",
            "maxLength": 50,
            "minLength": 2,
            "type": "string"
          },
          "national_id": {
            "title": "National Id",
            "type": "string"
          }
        }
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": [
          "location",
          "message",
          "type"
        ],
        "type": "object",
        "properties": {
          "location": {
            "title": "Location",
            "type": "string"
          },
          "message": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "message": {
            "title": "Error Message",
            "type": "string"
          },
          "errors": {
            "title": "Errors",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://openapi.basalam.com",
      "description": "Production Gateway"
    }
  ]
}